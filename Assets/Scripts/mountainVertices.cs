using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class mountainVertices : MonoBehaviour {

    //this script is meant to merge the vertices of each mountain plane (5 planes in total) so scripts can iterate through them appropriately
    //plane vertices are automatically generated by unity, but iterate positively in the negative x direction.... so i have to deal with it here
    Vector3[] mountain;
    bool mountainSet = false;
	// Use this for initialization
	void setMountain()
    {
        //find all the planes
        GameObject left = GameObject.FindGameObjectWithTag("left").GetComponent<terrainGenerator>().empty;
        GameObject left2 = GameObject.FindGameObjectWithTag("left2").GetComponent<terrainGenerator>().empty;
        GameObject top = GameObject.FindGameObjectWithTag("top").GetComponent<terrainGenerator>().empty;
        GameObject right = GameObject.FindGameObjectWithTag("right").GetComponent<terrainGenerator>().empty;
        GameObject right2 = GameObject.FindGameObjectWithTag("right2").GetComponent<terrainGenerator>().empty;
        //iterate through the 11 vertices of each plane backwards, and add them in the correct order here
        int i = 10;
        for (i = 10; i >= 0; i--)
        {
            mountain[10 - i] = left.transform.GetChild(i).transform.position;
        }
        i = 10;
        for (i = 10; i >= 0; i--)
        {
            mountain[21 - i] = left2.transform.GetChild(i).transform.position;
        }
        mountainSet = true;
        i = 10;
        for (i = 10; i >= 0; i--)
        {
            mountain[32 - i] = top.transform.GetChild(i).transform.position;
        }
        i = 10;
        for (i = 10; i >= 0; i--)
        {
            mountain[43 - i] = right.transform.GetChild(i).transform.position;
        }
        i = 10;
        for (i = 10; i >= 0; i--)
        {
            mountain[54 - i] = right2.transform.GetChild(i).transform.position;
        }
        mountainSet = true;
        
    }

    public Vector3[] getMountain() //public get
    {
        if (!mountainSet) //if the vertices haven't been merged yet, merge them with setMountain()
        {
            mountain = new Vector3[55]; //11 vertices * 5 planes
            setMountain();
        }
        return mountain;
    }
}
